// Auto-generated code by owl2proto (https://github.com/oxisto/owl2proto)

syntax = "proto3";

package example.v1;

import "buf/validate/validate.proto";
import "google/protobuf/descriptor.proto";

option go_package = "github.com/oxisto/owl2proto/example";

import "owl/owl.proto";


option (owl.meta) = {
	prefixes: [{
	prefix: "ex"
	iri: "http://example.com/cloud/"
},{
	prefix: "owl"
	iri: "http://www.w3.org/2002/07/owl#"
},{
	prefix: "rdf"
	iri: "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
},{
	prefix: "xml"
	iri: "http://www.w3.org/XML/1998/namespace"
},{
	prefix: "xsd"
	iri: "http://www.w3.org/2001/XMLSchema#"
},{
	prefix: "rdfs"
	iri: "http://www.w3.org/2000/01/rdf-schema#"
}]};

// BlockStorage is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message BlockStorage {
	option (owl.class).iri = "ex:BlockStorage";
	option (owl.class).parent = "ex:Storage";
	option (owl.class).parent = "ex:Resource";
	option (owl.class).parent = "owl:Thing";

	string name = 8027 [ (buf.validate.field).required = true,
	(owl.property).iri = "ex:name",
	(owl.property).parent = "owl:topDataProperty",
	(owl.property).class_iri = "ex:Resource" ];
}

// Compute is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Compute {

	oneof type {
		Container container = 15127;
		VirtualMachine virtual_machine = 3481;
	}
}

// Container is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message Container {
	option (owl.class).iri = "ex:Container";
	option (owl.class).parent = "ex:Compute";
	option (owl.class).parent = "ex:Resource";
	option (owl.class).parent = "owl:Thing";

	string name = 15153 [ (buf.validate.field).required = true,
	(owl.property).iri = "ex:name",
	(owl.property).parent = "owl:topDataProperty",
	(owl.property).class_iri = "ex:Resource" ];
	GeoLocation geo_location = 9969 [ (owl.property).iri = "ex:has",
	(owl.property).parent = "owl:topObjectProperty",
	(owl.property).class_iri = "ex:Compute" ];
}

// GeoLocation is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message GeoLocation {
	option (owl.class).iri = "ex:GeoLocation";
	option (owl.class).parent = "owl:Thing";

}

// Resource is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Resource {

	oneof type {
		Container container = 15127;
		VirtualMachine virtual_machine = 3481;
		BlockStorage block_storage = 14627;
	}
}

// Storage is an abstract class in our ontology, it cannot be instantiated but acts as an "interface".
message Storage {

	oneof type {
		BlockStorage block_storage = 14627;
	}
}

// VirtualMachine is an entity class in our ontology. It can be instantiated and contains all of its properties as well of its implemented interfaces.
message VirtualMachine {
	option (owl.class).iri = "ex:VirtualMachine";
	option (owl.class).parent = "ex:Compute";
	option (owl.class).parent = "ex:Resource";
	option (owl.class).parent = "owl:Thing";

	string name = 5214 [ (buf.validate.field).required = true,
	(owl.property).iri = "ex:name",
	(owl.property).parent = "owl:topDataProperty",
	(owl.property).class_iri = "ex:Resource" ];
	repeated BlockStorage block_storages  = 6443 [ (owl.property).iri = "ex:hasMultiple",
	(owl.property).parent = "owl:topObjectProperty",
	(owl.property).class_iri = "ex:VirtualMachine" ];
	GeoLocation geo_location = 12691 [ (owl.property).iri = "ex:has",
	(owl.property).parent = "owl:topObjectProperty",
	(owl.property).class_iri = "ex:Compute" ];
}
